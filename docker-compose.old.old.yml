version: '3.8'
services:


  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - nesjs-network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_PREFIX}_${POSTGRES_DB_NAME}"
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  api:
    container_name: "hrm_api_${NODE_ENV}"
    image: "hrm_api_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    build:
      context: ./app
      target: "${NODE_ENV}"
      dockerfile: Dockerfile
    command: ["./wait-for-postgres.sh"]
    entrypoint: ["npm", "run", "start:${NODE_ENV}"]
    env_file:
      - .env
    ports:
      - 9229:9229
    depends_on:
      - postgres
    networks:
      - nesjs-network
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  front:
    build:
      context: ./front
      target: "${NODE_ENV}"
      dockerfile: Dockerfile
    ports:
      - "8080:8080"


  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - 80:${NGINX_PORT}
    depends_on:
      - front
      - api
      - postgres
    networks:
      - nesjs-network

  # rabbitmq3:
  #   container_name: "rabbitmq"
  #   image: rabbitmq:3.8-management-alpine
  #   environment:
  #       - RABBITMQ_DEFAULT_USER=myuser
  #       - RABBITMQ_DEFAULT_PASS=mypassword
  #   ports:
  #       # AMQP protocol port
  #       - '5672:5672'
  #       # HTTP management UI
  #       - '15672:15672'

  # rabbit:
  #   image: rabbitmq:3.9-management
  #   ports:
  #     - "5672:5672"
  #   networks:
  #     - rabbitmq-quickstart-network

  # producer:
  #   image: quarkus-quickstarts/rabbitmq-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}
  #   build:
  #     context: rabbitmq-quickstart-producer
  #     dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
  #   environment:
  #     RABBITMQ_HOST: rabbit
  #     RABBITMQ_PORT: 5672
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - rabbitmq-quickstart-network

  # processor:
  #   image: quarkus-quickstarts/rabbitmq-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}
  #   build:
  #     context: rabbitmq-quickstart-processor
  #     dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
  #   environment:
  #     RABBITMQ_HOST: rabbit
  #     RABBITMQ_PORT: 5672
  #   networks:
  #     - rabbitmq-quickstart-network

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - .env
    networks:
      - nesjs-network

networks:
  nesjs-network:
  # rabbitmq-quickstart-network:
  #   name: rabbitmq-quickstart